export const aboutConfig = {
    header: {
        title: "О проекте",
        subtitle: "Микросервисная система видеонаблюдения с инновационной архитектурой",
        description: "Высокопроизводительное решение для трансляции RTSP потоков в браузер с ролевым управлением доступом и оптимизацией ресурсов"
    },

    audience: {
        title: "Для кого это?",
        items: [
            "Владельцы домов и квартир",
            "Малый и средний бизнес",
            "Образовательные учреждения",
            "Общественные пространства"
        ]
    },

     advantages: {
        title: "Наши преимущества",
        items: [
            "Простота использования",
            "Доступность 24/7",
            "Адаптация под ваши нужды",
            "Надежная защита данных"
        ]
    },

    architecture: {
        title: "Архитектура системы",
        diagram: "/architecture-diagram.svg",
        components: [
            {
                name: "Frontend (Next.js + TypeScript)",
                description: "Современный интерфейс с TypeScript-типизацией и SSR-рендерингом",
                features: [
                    "Реализация на Next.js 14 с App Router",
                    "Строгая типизация с TypeScript",
                    "Состояние: Zustand + TanStack Query",
                    "UI: Shadcn/ui + Tailwind CSS",
                    "Видеоплеер: HLS.js для потокового воспроизведения",
                    "Интернационализация (i18n)",
                    "Кастомные хуки для работы с API"
                ]
            },
            {
                name: "Backend (FastAPI)",
                description: "Микросервис управления пользователями и авторизации",
                features: [
                    "JWT аутентификация с access/refresh токенами",
                    "Ролевая модель (User/Moderator/Admin)",
                    "CRUD API для управления камерами",
                    "Импорт/экспорт данных в Excel",
                    "Логирование всех критических операций",
                    "Pydantic валидация запросов",
                    "Асинхронные endpoints",
                    "PostgreSQL в качестве основной БД"
                ]
            },
            {
                name: "Stream Service (Gin)",
                description: "Высоконагруженный микросервис обработки видеопотоков",
                features: [
                    "Захват RTSP потоков с камер",
                    "Транскодирование в HLS формат",
                    "Оптимизация нагрузки (автоматическое управление потоками)",
                    "Ограничение 4 одновременных просмотра на пользователя",
                    "Горутины для параллельной обработки",
                    "In-memory хранилище активных потоков",
                    "Интеграция с FFmpeg"
                ]
            }
        ]
    },

    technologies: {
        title: "Технологический стек",
        stacks: [
            {
                category: "Frontend",
                items: [
                    "Next.js 14 (App Router)",
                    "TypeScript 5",
                    "Tailwind CSS + Shadcn/ui",
                    "Zustand (стейт-менеджмент)",
                    "TanStack Query v5",
                    "Axios (HTTP-клиент)",
                    "HLS.js (видеоплеер)",
                    "React Hook Form + Zod"
                ]
            },
            {
                category: "Backend",
                items: [
                    "FastAPI (Python)",
                    "SQLAlchemy 2.0 + Alembic",
                    "PostgreSQL 15",
                    "JWT (PyJWT)",
                    "Redis (кеширование)",
                    "Celery (фоновые задачи)",
                    "PyExcel (работа с Excel)"
                ]
            },
            {
                category: "Stream Service",
                items: [
                    "Gin (Golang)",
                    "FFmpeg (транскодирование)",
                    "GoCV (обертка для OpenCV)",
                    "Goroutines (конкурентность)",
                    "Protocol Buffers (gRPC)"
                ]
            },
            {
                category: "Инфраструктура",
                items: [
                    "Docker + Docker Compose",
                    "Nginx (реверс-прокси)",
                    "GitHub Actions (CI/CD)",
                    "Prometheus + Grafana (мониторинг)",
                    "Sentry (логгирование ошибок)"
                ]
            }
        ]
    },

    features: {
        title: "Ключевые особенности",
        items: [
            {
                title: "Оптимизация ресурсов",
                description: "Автоматическое управление потоками - прекращение захвата при отсутствии зрителей"
            },
            {
                title: "Безопасность",
                description: "Шифрование RTSP-ссылок в БД, хеширование паролей, JWT-авторизация"
            },
            {
                title: "Производительность",
                description: "Обработка 4+ потоков с нагрузкой всего 2% на Ryzen 5 5600 благодаря Golang"
            },
            {
                title: "Удобство управления",
                description: "Импорт камер из Excel, фильтрация, избранное, история просмотров"
            },
            {
                title: "Адаптивный интерфейс",
                description: "Полноценная работа на мобильных устройствах с PWA-поддержкой"
            }
        ]
    },

    roadmap: {
        title: "Планы развития",
        current: [
            "Реализация аналитики работы камер (uptime мониторинг)",
            "Перенос состояния потоков в Redis",
            "Система уведомлений о проблемах с камерами",
            "Дашборд статистики (популярные камеры, нагрузка)"
        ],
        future: [
            "Поддержка WebRTC для уменьшения задержки",
            "Облачная запись видео (S3-хранилище)",
            "Детекция движения на сервере",
            "Интеграция с ONVIF для автоматического добавления камер"
        ]
    },

    performance: {
        title: "Производительность",
        metrics: [
            {
                name: "Задержка видео",
                value: "< 2s (от камеры до браузера)"
            },
            {
                name: "Нагрузка CPU",
                value: "2-5% на 4 потока (Ryzen 5 5600)"
            },
            {
                name: "Потребление памяти",
                value: "~50MB на поток (Gin service)"
            },
            {
                name: "Время отклика API",
                value: "< 100ms (p99)"
            }
        ],
        comparison: {
            title: "Сравнение с предыдущей версией",
            items: [
                "Нагрузка CPU снижена с 100% до 2-5%",
                "Потребление памяти уменьшено в 3 раза",
                "Количество поддерживаемых потоков увеличено в 4 раза"
            ]
        }
    },

    cta: {
        title: "Начните работу с системой",
        content: "Разверните собственную систему видеонаблюдения с уникальной архитектурой и высокой производительностью.",
        buttons: [
            {
                text: "Документация API",
                url: "/api-docs"
            },
            {
                text: "Демо-доступ",
                url: "/demo"
            },
            {
                text: "GitHub репозиторий",
                url: "https://github.com/your-repo"
            }
        ]
    }
};